{"id": "VAL-1", "output_field": "3"}
{"id": "VAL-2", "output_field": "磁盘IO速率（resources_report中的disk_rate）"}
{"id": "VAL-3", "output_field": "`IsReal()` 函数用于查询 `FieldData` 类中的数据是否为实数类型。"}
{"id": "VAL-4", "output_field": "200"}
{"id": "VAL-5", "output_field": "不一定。边关联的两个点的字段可以是用户自定义的任何字段，不必须是点的主键。在创建边时，可以通过指定起点和终点的类型及字段来建立关联。"}
{"id": "VAL-6", "output_field": "删除当前边，并将迭代器指向按（标签、事务ID、目标顶点、边ID）排序的下一个出边，若无更多出边则迭代器变为无效。"}
{"id": "VAL-7", "output_field": "TuGraph-DB的日志等级可以通过`verbose`配置项调整，分为`0`（仅记录`ERROR`及以上等级的错误日志）、`1`（记录`INFO`等级及以上的主要事件日志，默认等级）和`2`（记录最详细的`DEBUG`及以上等级的全部日志信息）三个等级。"}
{"id": "VAL-8", "output_field": "“memory”在机器性能指标中指的是内存，用于衡量计算机存储和处理数据的能力。它直接影响系统运行速度和多任务处理能力。通常以GB或MB为单位表示。"}
{"id": "VAL-9", "output_field": "如果不选择清空画布数据按钮，每次执行查询的结果会追加至画布区域。"}
{"id": "VAL-10", "output_field": "请通过官网提供的联系方式中的邮箱发送您的建议。具体邮箱信息可在官网或相关联系图片中找到。"}
{"id": "VAL-11", "output_field": "不支持。边索引主要用于图数据库中边的快速检索，但不直接用于查询加速。查询加速通常依赖于其他优化技术。"}
{"id": "VAL-12", "output_field": "TuGraph Monitor作为TuGraph服务的客户端，通过C++ RPC Client与TuGraph进行通信，通过Procedure查询接口来查询TuGraph服务所在机器的性能指标，并将TuGraph返回的结果包装成Prometheus需要的数据模型，等待Prometheus获取。"}
{"id": "VAL-13", "output_field": "TuGraph HA 集群的管理工具是`lgraph_peer`。"}
{"id": "VAL-14", "output_field": "使用POST方法，向`/update_token_time`接口发送请求，并在请求体中设置`refresh_time`和`expire_time`为0。"}
{"id": "VAL-15", "output_field": "TuGraph图数据库是由蚂蚁集团与清华大学联合研发的。"}
{"id": "VAL-16", "output_field": "TuGraph图学习模块依赖于TuGraph数据库系统。"}
{"id": "VAL-17", "output_field": "构造FieldSpec时需要三个参数：字段名称（n）、字段类型（t）、字段是否可选（nu）。"}
{"id": "VAL-18", "output_field": "TuGraph DB的并发性能优化最初面临的主要问题是Antlr4 C++ target的并发性能不足以支持所需的超高并发GQL请求。"}
{"id": "VAL-19", "output_field": "需要三个参数：TuGraph服务的地址（格式为ip:port）、登录用户名和登录密码。"}
{"id": "VAL-20", "output_field": "TuGraph-DB查询引擎目前支持使用OpenCypher查询语言，并计划在未来支持ISO GQL查询语言。"}
{"id": "VAL-21", "output_field": "DeleteProcedure 函数接受一个整型参数和一个字符串参数，分别命名为 `procedureId` 和 `procedureName`。"}
{"id": "VAL-22", "output_field": "只读事务模式。"}
{"id": "VAL-23", "output_field": "url、user、password"}
{"id": "VAL-24", "output_field": "24小时"}
{"id": "VAL-25", "output_field": "TuGraph图学习模块中包括的四种采样算子是：Neighbor Sampling（邻居采样）、Edge Sampling（边采样）、Random Walk Sampling（随机游走采样）和Negative Sampling（负采样）。"}
{"id": "VAL-26", "output_field": "当执行UpsertEdge操作时，如果提供的src和dst对应的边不存在，则返回True表示插入新边；如果边已存在，则返回False表示更新边属性。如果存在索引冲突，返回0；成功插入返回1；成功更新返回2。"}
{"id": "VAL-27", "output_field": "ANTLR4支持生成Java、Python、C++、JavaScript、Go等10种目标语言的解析器。"}
{"id": "VAL-28", "output_field": "会抛出OutOfRange异常。"}
{"id": "VAL-29", "output_field": "VertexLockGuard是一个用于自动管理顶点锁的类，它在构造时自动获取锁，在析构时自动释放锁，以确保正确的并发更新。"}
{"id": "VAL-30", "output_field": "\"Value pack\"时的\"null array\"通常指一个空数组，即没有任何元素的数组。在某些编程或数据处理场景中，它可能用于表示无数据或默认状态。具体含义需结合上下文确定。"}
{"id": "VAL-31", "output_field": "TuGraph支持边属性匹配。您提供的Cypher查询语句格式是正确的，但可能存在一些问题导致无法过滤边属性。请检查以下几点：\n1. 确保边属性`name`存在且正确。\n2. 检查是否有语法错误或拼写错误。\n3. 确认边标签`kw`正确。\n\n如果以上检查无误，请尝试使用其他属性或条件进行过滤，或者提供更详细的错误信息以便进一步分析。"}
{"id": "VAL-32", "output_field": "在TuGraph中，点类型和边类型是通过JSON格式的定义来创建的。点类型的定义包含了标签、主键、类型（VERTEX）、是否允许删除属性、属性列表等信息，每个属性包括名称、类型、是否可选、是否索引、是否唯一等。边类型的定义包含了标签、类型（EDGE）、起/终点类型、属性列表等信息，属性列表的定义与点类型相同。"}
{"id": "VAL-33", "output_field": "是的，如果log_dir不设置，日志信息将不会保存到文件中，而是输出到控制台。在daemon模式下，若log_dir为空，则不会向控制台输出任何日志。"}
{"id": "VAL-34", "output_field": "在实际应用中，调用 `algo.shortestPath` 算法的一个例子是查找社交网络中两个用户之间的最短路径。例如，找到用户 A 和用户 B 之间的最短好友关系链，以便了解他们是如何连接的。通过指定起点和终点节点，以及配置参数如最大跳数和关系查询类型，可以获取这两点间的最短路径及其相关成本。这在社交网络分析、推荐系统等领域非常有用。"}
{"id": "VAL-35", "output_field": "字符串"}
{"id": "VAL-36", "output_field": "Rust 存储过程目前仅支持v1版本。"}
{"id": "VAL-37", "output_field": "gtest框架"}
{"id": "VAL-38", "output_field": "需要指定。在创建 Label 的请求中，必须通过 `is_vertex` 字段明确指定该 Label 是点（vertex）还是边（relationship）。如果是点，还需设置 `primary` 字段作为主键属性；如果是边，则可设置 `edge_constraints` 字段来限制边的起点和终点。"}
{"id": "VAL-39", "output_field": "TuGraph 中使用的两种主要图分析操作是简单图分析操作和复杂图分析操作。简单图分析操作通常也是局部的图分析操作，比如两点间最短路算法 SPSP、Jaccard 算法。复杂分析操作，是图分析引擎中较为复杂的部分，通常涉及全图的多轮数据迭代操作，比如网页排序算法 PageRank、社区发现算法 Louvain。"}
{"id": "VAL-40", "output_field": "在TuGraph-DB中，开发者可以通过包含`tools/lgraph_log.h`头文件并使用提供的日志宏来增加日志输出埋点。例如，使用`LOG_DEBUG() << \"日志信息\";`来输出调试级别的日志。具体使用方式可参考示例代码。"}
{"id": "VAL-41", "output_field": "InputError"}
{"id": "VAL-42", "output_field": "Grafana主要用于可视化展示和分析数据，可以从Prometheus等数据源获取数据，并将其转换为图形和可视化效果。"}
{"id": "VAL-43", "output_field": "DeleteProcedure 函数用于删除存储过程。它从数据库中移除指定的存储过程定义。通常用于数据库维护和优化。"}
{"id": "VAL-44", "output_field": "PairUniqueIndex 的钥匙生成形式是将两个字段的值组合成一个唯一标识，通常采用“字段1值_字段2值”的格式，确保每个组合在数据集中是唯一的。"}
{"id": "VAL-45", "output_field": "类FieldData用于表示布尔值、字符串、浮点数和整数类型的数据。"}
{"id": "VAL-46", "output_field": "如果在线全量导入TuGraph时发生数据包错误，默认行为是停止导入并打印出已导入的包数。"}
{"id": "VAL-47", "output_field": "ORDER BY子句用于对查询结果进行排序。"}
{"id": "VAL-48", "output_field": "TuGraph-DB有http接口，对应的接口代码在RESTful API文档中。"}
{"id": "VAL-49", "output_field": "lgraph_peer工具并非只有编译方式部署后才有，它也可以通过其他方式获取和使用，具体取决于项目需求和配置。通常，编译部署是为了确保工具与系统环境的兼容性和性能优化。建议查阅官方文档或相关指南以获取详细部署信息。"}
{"id": "VAL-50", "output_field": "25"}
