{"id": "TEST1-1", "output_field": "字段不在value_dict中则视为null。"}
{"id": "TEST1-2", "output_field": "Nolan, Redgrave"}
{"id": "TEST1-3", "output_field": "访问`/role/`接口，带管理员授权令牌查询角色信息。例如：`GET http://localhost:7070/role`，请求头加`Authorization: Bearer <token>`。返回角色详情。"}
{"id": "TEST1-4", "output_field": "TuGraph支持最多2^(40)个点，每点或边可拥有1024个属性。"}
{"id": "TEST1-5", "output_field": "检查当前路径是否正确，切换到含setup.sh的目录。"}
{"id": "TEST1-6", "output_field": "lgraph_server -d start启动会在当前目录生成lgraph.pid文件，记录服务进程PID，无参数控制其路径。"}
{"id": "TEST1-7", "output_field": "编译TuGraph时，在ARM机器（如M1 Mac）的cmake命令中添加 `-DENABLE_BUILD_ON_AARCH64=ON`。"}
{"id": "TEST1-8", "output_field": "cleanup_dir指定目录用于执行后清理。"}
{"id": "TEST1-9", "output_field": "启动 TuGraph：`lgraph_server -d start -c lgraph_daemon.json`。"}
{"id": "TEST1-10", "output_field": "TuGraph团队通过改变数据所有权以避免锁依赖，并利用“只调用一次”策略均摊初始化成本，提升解析速度。"}
{"id": "TEST1-11", "output_field": "使用 DELETE 方法中止任务。"}
{"id": "TEST1-12", "output_field": "AllocVertexSubset函数分配ParallelBitset集合，标记点激活状态。"}
{"id": "TEST1-13", "output_field": "检查网络和数据格式，尝试分批导入，仍不行联系技术支持。"}
{"id": "TEST1-14", "output_field": "csv和json"}
{"id": "TEST1-15", "output_field": "TuGraph调优还可通过参数调整、索引优化、分区策略等方式进行。"}
{"id": "TEST1-16", "output_field": "url、user、password"}
{"id": "TEST1-17", "output_field": "Cython通过`from cython.cimports.olap_base import *`导入Olap模块，图数据库模块导入方式未明确。"}
{"id": "TEST1-18", "output_field": "'unique'确保单个属性唯一，'pair_unique'确保属性对唯一。"}
{"id": "TEST1-19", "output_field": "图数据库在处理关联关系效率、适应数据变化灵活性和数据关系直观展现方面优于关系型数据库。"}
{"id": "TEST1-20", "output_field": "属性值长度超唯一索引限制，需缩短或调整索引。"}
{"id": "TEST1-21", "output_field": "400错误码"}
{"id": "TEST1-22", "output_field": "TuGraph提供编译、运行、精简运行三种系统环境。"}
{"id": "TEST1-23", "output_field": "TuGraph-DB新增支持Point、Linestring和Polygon三种空间数据类型。"}
{"id": "TEST1-24", "output_field": "extra"}
{"id": "TEST1-25", "output_field": "leader"}
{"id": "TEST1-26", "output_field": "WriteNotAllowed异常"}
{"id": "TEST1-27", "output_field": "VertexIndex迭代器"}
{"id": "TEST1-28", "output_field": "可指定错误继续和线程数。"}
{"id": "TEST1-29", "output_field": "get_vertex()"}
{"id": "TEST1-30", "output_field": "WriteNotAllowed异常"}
{"id": "TEST1-31", "output_field": "初始化时，节点pagerank值=1/节点总数/节点出度。"}
{"id": "TEST1-32", "output_field": "TuGraph 支持csv和json数据导出。"}
{"id": "TEST1-33", "output_field": "数组越界，需检查数据文件或配置确保数据完整。"}
{"id": "TEST1-34", "output_field": "只读事务"}
{"id": "TEST1-35", "output_field": "CSV栏位名与配置文件columns字段名需一致对应，否则按CSV原始顺序导入。"}
{"id": "TEST1-36", "output_field": "顶点标签、文件头行数、列映射"}
{"id": "TEST1-37", "output_field": "TuGraph Browser 默认端口号：7070。"}
{"id": "TEST1-38", "output_field": "'计算方法': '配置算法'"}
{"id": "TEST1-39", "output_field": "蚂蚁集团与清华联合开发"}
{"id": "TEST1-40", "output_field": "图学习系统用于处理图学习相关任务。"}
{"id": "TEST1-41", "output_field": "GetVertexByUniqueCompositeIndex函数需参数：label_name, field_name, field_value_string。"}
{"id": "TEST1-42", "output_field": "在配置文件中添加 `\"rpc_port\": <端口号>` 或在命令行使用 `--rpc_port <端口号>`，默认端口为 9090。"}
{"id": "TEST1-43", "output_field": "图数据库处理关联关系时，在性能、兼容性和直观性上优于关系型数据库。"}
{"id": "TEST1-44", "output_field": "默认密码：73@TuGraph。"}
{"id": "TEST1-45", "output_field": "std::vector<std::string>"}
{"id": "TEST1-46", "output_field": "独立运行。"}
{"id": "TEST1-47", "output_field": "\"urls\", \"user\", \"password\""}
{"id": "TEST1-48", "output_field": "在命令行中使用lgraph_cypher工具提交Cypher查询并保存结果：\n\n```powershell\n$ ./lgraph_cypher.py -c <配置文件路径> -u <用户名> -P <密码> -s \"<查询语句>\" -f <结果文件路径>\n```"}
{"id": "TEST1-49", "output_field": "数据和日志目录持久化于宿主机 `/root/tugraph/`。"}
{"id": "TEST1-50", "output_field": "TuGraph Traversal API 的起始点设置方式有三种：直接指定点 ID、指定点 ID 数组、使用过滤函数指定。"}
{"id": "TEST1-51", "output_field": "设置字段值。"}
{"id": "TEST1-52", "output_field": "蚂蚁集团与清华联合开发"}
{"id": "TEST1-53", "output_field": "无系统库依赖"}
{"id": "TEST1-54", "output_field": "`SetFrontier` 函数使用 `root_vertex_filter` 参数筛选顶点，仅包含其返回 `true` 的顶点在初始前沿中。"}
{"id": "TEST1-55", "output_field": "包含"}
{"id": "TEST1-56", "output_field": "启动 tugraph-runtime-centos7 镜像需约 4GB 内存和 100GB 硬盘。"}
{"id": "TEST1-57", "output_field": "属性个数、长度和、索引类型"}
{"id": "TEST1-58", "output_field": "InvalidTxn"}
{"id": "TEST1-59", "output_field": "TuGraphClient是TuGraph Python SDK模块，用于与TuGraph服务器交互，支持Cypher查询和存储过程。"}
{"id": "TEST1-60", "output_field": "TuGraph 支持 X86_64 和 ARM64 硬件平台。"}
{"id": "TEST1-61", "output_field": "前两个参数格式同导入脚本：`personDesc`为数据描述，`person`为数据内容。"}
{"id": "TEST1-62", "output_field": "类集合映射为边，类属性映射为图对象属性。"}
{"id": "TEST1-63", "output_field": "DateTime 对象保持不变。"}
{"id": "TEST1-64", "output_field": "标签存在，字段唯一且默认值类型兼容。"}
{"id": "TEST1-65", "output_field": "权重值"}
{"id": "TEST1-66", "output_field": "RPC允许程序通过网络请求远程服务，无需关注网络细节。"}
{"id": "TEST1-67", "output_field": "TuGraph中主键用于确保点数据唯一性，默认为唯一索引。"}
{"id": "TEST1-68", "output_field": "RpcException是TuGraph RPC API中表示RPC相关错误的异常类型。"}
{"id": "TEST1-69", "output_field": "不支持。match语句用于匹配单个属性，多属性匹配需用多个条件或逻辑组合。"}
{"id": "TEST1-70", "output_field": "TuGraph优化了Antlr4 C++的并发性能，提升超10倍。"}
{"id": "TEST1-71", "output_field": "TuGraph节点或关系只能有一个标签，多标签取第一个；OpenCypher允许无标签或多标签。"}
{"id": "TEST1-72", "output_field": "true"}
{"id": "TEST1-73", "output_field": "不支持"}
{"id": "TEST1-74", "output_field": "字符串"}
{"id": "TEST1-75", "output_field": "SetFrontier函数"}
{"id": "TEST1-76", "output_field": "GeaBase部署时间不定，需具体环境和配置信息。"}
{"id": "TEST1-77", "output_field": "点、边"}
{"id": "TEST1-78", "output_field": "TuGraph支持C++、Java、Python。"}
{"id": "TEST1-79", "output_field": "result"}
{"id": "TEST1-80", "output_field": "RPC接口是远程请求服务的网络协议。"}
{"id": "TEST1-81", "output_field": "acted_in, directed"}
{"id": "TEST1-82", "output_field": "启动 TuGraph 服务器：`lgraph_server -d start -c lgraph.json`。"}
{"id": "TEST1-83", "output_field": "异常"}
{"id": "TEST1-84", "output_field": "TuGraph 支持 X86_64 和 ARM64 硬件架构。"}
{"id": "TEST1-85", "output_field": "TuGraph-OGM 通过映射JAVA对象（类为节点，集合为边，属性为图对象属性）和提供操作函数，支持JAVA开发人员进行图对象映射。"}
{"id": "TEST1-86", "output_field": "`OPTIONAL MATCH`在GQL中用于执行灵活查询，允许结果包含不满足条件的部分。"}
{"id": "TEST1-87", "output_field": "在`loadProcedure`方法中，使用`readOnly`参数控制存储过程是否为只读。"}
{"id": "TEST1-88", "output_field": "RpcStatusException"}
{"id": "TEST1-89", "output_field": "交换ID。"}
{"id": "TEST1-90", "output_field": "查询'Forrest Gump'演员及角色：`MATCH (m:movie {title: 'Forrest Gump'})<-[r:acted_in]-(a:person) RETURN a.name, r.role`"}
{"id": "TEST1-91", "output_field": "TuGraph-DB社区版内置6种基础算法。"}
{"id": "TEST1-92", "output_field": "TuGraph-DB支持点、折线、多边形三种空间数据类型。"}
{"id": "TEST1-93", "output_field": "所有版本支持麒麟操作系统。"}
{"id": "TEST1-94", "output_field": "TuGraph-DB存储Point数据用EWKB格式。"}
{"id": "TEST1-95", "output_field": "操作图数据（创建、查询、修改）。"}
{"id": "TEST1-96", "output_field": "1970年1月1日"}
{"id": "TEST1-97", "output_field": "抛出 InputError 异常。"}
{"id": "TEST1-98", "output_field": "通过 `-s` 参数指定查询，用 `-format table` 输出表格格式结果。"}
{"id": "TEST1-99", "output_field": "`reduce_plus` 函数累加两个参数。"}
{"id": "TEST1-100", "output_field": "不支持无向边，可模拟。"}
{"id": "TEST1-101", "output_field": "FieldData类提供三个构造函数：FieldData(int)、FieldData(double)、FieldData(string)。"}
{"id": "TEST1-102", "output_field": "利用历史航班数据设计最优航班规划，提供最低费用和最短飞行时间的路线方案。"}
{"id": "TEST1-103", "output_field": "检查顶点或边是否有特定字段。"}
{"id": "TEST1-104", "output_field": "最低4核，建议64核。"}
{"id": "TEST1-105", "output_field": "MappedVid 函数用于视频帧坐标映射。"}
{"id": "TEST1-106", "output_field": "异常"}
{"id": "TEST1-107", "output_field": "批量在线导入通常用`LOAD CSV`或`UNWIND`，而非`CREATE (n), (m)`。后者只适合创建单个节点。"}
{"id": "TEST1-108", "output_field": "lgraph_backup工具用于备份TuGraph数据库数据。"}
{"id": "TEST1-109", "output_field": "GET /db/{graph_name}/node/{vertex_id}/property"}
{"id": "TEST1-110", "output_field": "点、边、属性"}
{"id": "TEST1-111", "output_field": "TuGraph-DB支持存储过程，支持C++、Python和Rust。"}
{"id": "TEST1-112", "output_field": "获取边属性"}
{"id": "TEST1-113", "output_field": "TuGraph-DB是高性能图数据库，用于管理和分析复杂关联数据，支持大数据量、低延迟查找、快速图分析，具备属性图模型、实时操作、ACID事务、索引、HTAP、多图查询语言支持、OLAP API、存储过程和图可视化等功能。"}
{"id": "TEST1-114", "output_field": "RpcStatusException"}
{"id": "TEST1-115", "output_field": "2024年第三季度推出HA支持Witness角色和管理工具。"}
{"id": "TEST1-116", "output_field": "TuGraph-DB用CMake编译，支持C++17标准\n\n或更简略：\n\nCMake编译，C++17支持"}
{"id": "TEST1-117", "output_field": "Cython.cimports.libcpp.unordered_map 是 Cython 导入 C++ unordered_map 容器的模块，用于在 Cython 代码中使用 C++ 哈希表。"}
{"id": "TEST1-118", "output_field": "`-d` 和 `-g`"}
{"id": "TEST1-119", "output_field": "部分支持GQL语句。"}
{"id": "TEST1-120", "output_field": "log4j-core: 2.14.1, guava: 31.0-jre\n\n（此答案已足够简洁，无需进一步概括）"}
{"id": "TEST1-121", "output_field": "设置指定用户对图的访问权限。"}
{"id": "TEST1-122", "output_field": "在TuGraph-DB运行单元测试时，通过包含`\"tools/lgraph_log.h\"`头文件并使用`LOG_DEBUG()`, `LOG_INFO()`, `LOG_WARN()`, `LOG_ERROR()`, `LOG_FATAL()`等宏输出日志信息，如`LOG_INFO() << \"This is a test log message.\"`，日志将按配置输出到控制台或文件。"}
{"id": "TEST1-123", "output_field": "使用\"Nav\"语句可从一实体导航至关联实体。"}
{"id": "TEST1-124", "output_field": "有，用 `CALL db.findEdgeByPairUniqueIndex('edge_label', 'index_name', 'src_vertex_id', 'dst_vertex_id', 'unique_value')` 查找并更新边数据。"}
{"id": "TEST1-125", "output_field": "TuGraph Browser"}
{"id": "TEST1-126", "output_field": "SybilRank算法通过信任传播计算。"}
{"id": "TEST1-127", "output_field": "节点和边的属性在知识图谱中用于存储实体和关系的详细信息，提升表达和查询分析能力。"}
{"id": "TEST1-128", "output_field": "在TuGraph项目中，提交代码前先提交issue是为了避免重复工作、确保修改必要性、优化改进空间，并减少沟通成本和PR被拒风险。"}
{"id": "TEST1-129", "output_field": "社区版是开源单机版，基础功能，适合学习和小项目；企业版功能更全，包括分布式架构、多计算引擎、大数据支持等，适合商业应用。"}
{"id": "TEST1-130", "output_field": "BFS程序输出结果包括准备时间0.10s，核心处理时间0.02s，找到3829个顶点，输出时间0.00s，总耗时0.11s，完成。"}
{"id": "TEST1-131", "output_field": "`VertexIndexIterator`在`key_start`和`key_end`相等且为`v`时，返回遍历所有字段值为`v`的顶点的迭代器。"}
{"id": "TEST1-132", "output_field": "通过配置文件定义顶点数据文件路径、标签、头行数及列映射，使用lgraph_import工具导入配置文件写入图数据库。"}
{"id": "TEST1-133", "output_field": "lgraph_api::Transaction用于在TuGraph数据库中执行原子操作，确保ACID特性，支持读写事务和并行处理。"}
{"id": "TEST1-134", "output_field": "`ProcessVertexActive`出错引发`VertexProcessingException`。"}
{"id": "TEST1-135", "output_field": "字符串格式"}
{"id": "TEST1-136", "output_field": "localhost:9111"}
{"id": "TEST1-137", "output_field": "TuGraph图分析引擎主要适用于全图数据分析任务。"}
{"id": "TEST1-138", "output_field": "重命名node_id为不冲突名称，如nodeIdentifier，或在XML配置中区分作用域，或使用命名空间避免冲突。"}
{"id": "TEST1-139", "output_field": "```java\nsession.query(\"CALL db.createEdgeLabel('DIRECT', '[]')\");\n```"}
{"id": "TEST1-140", "output_field": "可统一返回字典或元组，如`{'name': p.name, 'age': p.age}`或`(p.name, p.age)`，在页面处理。"}
{"id": "TEST1-141", "output_field": "为ARM机器（如Mac M1）编译TuGraph，在CMake中加参数`-DENABLE_BUILD_ON_AARCH64=ON`。"}
{"id": "TEST1-142", "output_field": "CPU:i7/Ryzen 7,内存:16GB,显卡:RTX 3060级,存储:512GB SSD。"}
{"id": "TEST1-143", "output_field": "使用Dijkstra或A*算法查找两点间最短路径，考虑网络权重和方向。"}
{"id": "TEST1-144", "output_field": "TuGraph支持用Cypher和Python修改schema。"}
{"id": "TEST1-145", "output_field": "TuGraph-Restful-Server 使用 brpc 框架支持 HTTP 协议，主要功能包括文件上传、数据导入、进度查询、Cypher 查询和文件删除。"}
{"id": "TEST1-146", "output_field": "禁用角色后，用户丧失该角色权限。"}
{"id": "TEST1-147", "output_field": "确保公司签署贡献者许可协议，且您被授权代表公司提交内容。"}
{"id": "TEST1-148", "output_field": "清空数据保留schema：执行`CALL db.dropAllVertex()`"}
{"id": "TEST1-149", "output_field": "OGM与MyBatis类似，主要体现在对象关系映射、SQL操作封装和简化数据库交互。"}
{"id": "TEST1-150", "output_field": "无。"}
{"id": "TEST1-151", "output_field": "TuGraph-DB提供名为`lgraph_import`的数据导入工具，但相关代码位置未明确。"}
{"id": "TEST1-152", "output_field": "图数据库在性能、兼容性和直观性上优于关系型数据库。"}
{"id": "TEST1-153", "output_field": "TuGraph 客户端 SDK 支持 Java、Python、C++ 等。"}
{"id": "TEST1-154", "output_field": "WKT和WKB格式"}
{"id": "TEST1-155", "output_field": "导入数据"}
{"id": "TEST1-156", "output_field": "TuGraph企业版是商业化的图数据库平台，提供分布式架构、全生命周期管理、多计算引擎支持、多样化数据源接入、多地部署及专家服务。"}
{"id": "TEST1-157", "output_field": "GET /db/{graph_name}/[cpp_plugin|python_plugin]"}
{"id": "TEST1-158", "output_field": "TuGraph基础算法包包含广度优先搜索、网页排序、单源最短路径、弱连通分量、平均集聚系数和标签传播等算法。"}
{"id": "TEST1-159", "output_field": "7070"}
{"id": "TEST1-160", "output_field": "调用`POST /role/{role_name}/disable`，成功禁用返回200状态码。"}
{"id": "TEST1-161", "output_field": "不会。"}
{"id": "TEST1-162", "output_field": "'false'"}
{"id": "TEST1-163", "output_field": "磁盘IO警报在读写超限或异常时触发。"}
{"id": "TEST1-164", "output_field": "InEdgeIterator 变为无效。"}
{"id": "TEST1-165", "output_field": "DUAL_DIRECTION指非对称图输入和加载。"}
{"id": "TEST1-166", "output_field": "Goto函数在顶点ID不存在且nearest为true时，尝试获取紧随指定边的下一条边，若无则迭代器失效。"}
{"id": "TEST1-167", "output_field": "3829个找到的顶点"}
{"id": "TEST1-168", "output_field": "24小时"}
{"id": "TEST1-169", "output_field": "在GetEdgeProp命令中，通过`-timestamp`参数指定时间戳值来查找特定时间戳的边属性，如：`GetEdgeProp -e edge_type -v vertex_id -timestamp 1609459200`。"}
{"id": "TEST1-170", "output_field": "默认端口号：7070"}
{"id": "TEST1-171", "output_field": "TuGraph-DB支持运行图算法，如BFS、PageRank等，并有示例可参考。"}
{"id": "TEST1-172", "output_field": "Python存储过程接口包括访问级别定义、边标识符、字段数据类型、存储过程的加载、列举、调用、删除和更新功能。"}
{"id": "TEST1-173", "output_field": "成功True，失败False。"}
{"id": "TEST1-174", "output_field": "复杂图分析需导出快照执行。"}
{"id": "TEST1-175", "output_field": "'filter_output_default函数用于返回过滤后的默认输出。'"}
{"id": "TEST1-176", "output_field": "在Java运行时，MyBatis Generator的XML配置文件中，`targetProject`应设置为生成文件的绝对路径或相对路径，如`targetProject=\"src/main/java\"`，确保路径正确。"}
{"id": "TEST1-177", "output_field": "`class`字段"}
{"id": "TEST1-178", "output_field": "tugraph的Cypher不支持直接删除重复关系，需另寻方法。"}
{"id": "TEST1-179", "output_field": "默认第一次快照时间在0到ha_snapshot_interval_s内随机。"}
{"id": "TEST1-180", "output_field": "标注来源细节、相关许可限制，并显著标明“以第三方名义提交：【姓名】”。"}
{"id": "TEST1-181", "output_field": "导入或查询逻辑不一致导致结果差异，需统一数据格式和处理流程。"}
{"id": "TEST1-182", "output_field": "对象图映射（OGM）支持将JAVA对象映射为TuGraph的节点和边，并操作图数据库。"}
{"id": "TEST1-183", "output_field": "在单节点模式下实例化liblgraph_client_python.client对象的方法为：`client = liblgraph_client_python.client(\"127.0.0.1:19099\", \"admin\", \"73@TuGraph\")`。"}
{"id": "TEST1-184", "output_field": "`GetRoleInfo` 函数在角色名非法时抛出 `InvalidRoleNameException`。"}
{"id": "TEST1-185", "output_field": "TuGraph支持云、Docker和本地部署。"}
{"id": "TEST1-186", "output_field": "Corin Redgrave"}
{"id": "TEST1-187", "output_field": "可使用`--continue_on_error true`选项在导入失败时继续操作。"}
{"id": "TEST1-188", "output_field": "使用ResetHeader方法设置表头。"}
{"id": "TEST1-189", "output_field": "明确个人向蚂蚁集团项目贡献文档和代码的知识产权许可，确保遵守许可条款。"}
{"id": "TEST1-190", "output_field": "TuGraph Mini Runtime Image 不支持Java、Python功能，无C++插件编译，仅允许so文件上传。"}
{"id": "TEST1-191", "output_field": "Procedure及Embed使用OlapOnDB类辅助函数。"}
{"id": "TEST1-192", "output_field": "密码长度、强度问题，密码重复，数据库连接错误。"}
{"id": "TEST1-193", "output_field": "用 `Galaxy` 类的 `CreateUser` 方法，传入用户名、密码和描述即可创建账户。"}
{"id": "TEST1-194", "output_field": "DeleteVertexLabel"}
{"id": "TEST1-195", "output_field": "无权限"}
{"id": "TEST1-196", "output_field": "TuGraph可视化监控主要使用TuGraph Monitor、Prometheus和Grafana。"}
{"id": "TEST1-197", "output_field": "TuGraph 读取 JSON 格式的配置文件。"}
{"id": "TEST1-198", "output_field": "无法确定`selectVertex`方法超时设置，需更多代码或配置信息。"}
{"id": "TEST1-199", "output_field": "出边、入边、出邻居点、入邻居点过滤函数"}
{"id": "TEST1-200", "output_field": "WriteNotAllowed异常"}
{"id": "TEST1-201", "output_field": "`/usr/lib/pythonX.X/dist-packages/` 或 `/usr/local/lib/pythonX.X/dist-packages/`"}
{"id": "TEST1-202", "output_field": "文本未明确指定“light-orange”对应的资源名称。"}
{"id": "TEST1-203", "output_field": "删除导入图库的数据：选中图片后执行删除操作，具体步骤参考软件帮助文档，若无法删除检查权限或联系管理员。"}
{"id": "TEST1-204", "output_field": "边 euid 列表。"}
{"id": "TEST1-205", "output_field": "TuGraph选择B+树因其高效顺序读写、适于频繁读操作、性能稳定且成本低。"}
{"id": "TEST1-206", "output_field": "\"CallProcedureToLeader\" 接口设 json_format=false 返回字符串结果。"}
{"id": "TEST1-207", "output_field": "优化查询、利用索引、减少返回数据。"}
{"id": "TEST1-208", "output_field": "integer() 方法在 FieldData 类型非 INT8, INT16, INT32, INT64 时抛出 std::bad_cast。"}
{"id": "TEST1-209", "output_field": "TuGraph-DB使用基于LMDB的KV数据库作为存储引擎。"}
{"id": "TEST1-210", "output_field": "检查更新及文档，问题未解决联系技术支持。"}
{"id": "TEST1-211", "output_field": "否"}
{"id": "TEST1-212", "output_field": "TuGraph使用B+树存储数据，因其顺序读写性能佳，适合读优场景，且设计成本低。"}
{"id": "TEST1-213", "output_field": "TuGraph-DB所用boost库版本未在文档中明确。"}
{"id": "TEST1-214", "output_field": "TuGraph适合新手、开发者、运维人员及研究人员等多类用户。"}
{"id": "TEST1-215", "output_field": "创建实体、提交Cypher、加载调用存储过程。"}
{"id": "TEST1-216", "output_field": "最低100GB，建议2TB NVMe SSD。"}
{"id": "TEST1-217", "output_field": "自动创建目录"}
{"id": "TEST1-218", "output_field": "默认值为 18446744073709551615"}
{"id": "TEST1-219", "output_field": "10秒"}
{"id": "TEST1-220", "output_field": "通过XML配置定义SQL和映射规则，MyBatis在运行时生成接口实现类，解析XML执行SQL并返回结果。"}
{"id": "TEST1-221", "output_field": "图卷积层、池化层、全连接层"}
{"id": "TEST1-222", "output_field": "gtest"}
{"id": "TEST1-223", "output_field": "可以"}
{"id": "TEST1-224", "output_field": "HA集群snapshot删除时机未明确。"}
{"id": "TEST1-225", "output_field": "TuGraph-DB现支持OpenCypher，未来将支持ISO GQL。"}
{"id": "TEST1-226", "output_field": "无"}
{"id": "TEST1-227", "output_field": "使用POST方法访问`/role`接口，在请求体中提供角色名和描述信息。例如：\n\n```\nPOST http://localhost:7070/role\nContent-Type: application/json\nAuthorization: Bearer <token>\nBody:\n{\n    \"role\": \"new_role\",\n    \"description\": \"This is a new role.\"\n}\n```"}
{"id": "TEST1-228", "output_field": "不支持"}
{"id": "TEST1-229", "output_field": "在Java运行时，`targetProject`在xml配置文件中应设置为项目的绝对路径或相对路径，如`<targetProject>/path/to/your/project</targetProject>`，确保路径准确。"}
{"id": "TEST1-230", "output_field": "HA新增Witness角色及管理工具支持"}
{"id": "TEST1-231", "output_field": "在 \"CallGql\" 接口的请求参数中设置 \"graphName\" 字段，如 {\"graphName\": \"yourGraphName\"}。"}
{"id": "TEST1-232", "output_field": "图中能展示属性值，通过配置点或边的显示文本实现。"}
{"id": "TEST1-233", "output_field": "tugraph-db兼容neo4j协议，可用neo4j驱动连接。"}
{"id": "TEST1-234", "output_field": "查询不到设置了属性的边数据，可能因数据文件缺失属性、数据映射错误或格式不正确。需检查文件完整性、映射准确性和格式合规性。"}
{"id": "TEST1-235", "output_field": "在\"TuGraph-DataX\"项目中，通过创建`job_actors.json`配置文件，设置`reader`读取`actors.csv`和`writer`写入TuGraph，配置文件需包含文件路径、编码、分隔符及TuGraph服务器信息、图名称、标签和属性。"}
{"id": "TEST1-236", "output_field": "创建新子图需`figsize`、`subplot`、`sharex`/`sharey`等参数，可选`dpi`、`facecolor`，具体依绘图库而定。"}
{"id": "TEST1-237", "output_field": "通过查询并对比导出前后数据库中的数据来验证一致性。"}
{"id": "TEST1-238", "output_field": "返回值表示节点vi的出度。"}
{"id": "TEST1-239", "output_field": "TuGraph Browser"}
{"id": "TEST1-240", "output_field": "新增点的 vid 列表"}
{"id": "TEST1-241", "output_field": "TuGraph支持vector与知识图谱混合检索。"}
{"id": "TEST1-242", "output_field": "提升系统启动初期性能，减少IO操作影响。"}
{"id": "TEST1-243", "output_field": "源顶点ID"}
{"id": "TEST1-244", "output_field": "`OPTIONAL MATCH`用于查询可能不存在的数据，允许结果包含缺失项，避免因数据缺失导致查询失败。"}
{"id": "TEST1-245", "output_field": "GraphDB实例无法使用可能由于服务器宕机、配置错误、网络问题、资源耗尽或软件故障。"}
{"id": "TEST1-246", "output_field": "TuGraph 运行需 `liblgraph.so` 在 `LD_LIBRARY_PATH` 中。"}
{"id": "TEST1-247", "output_field": "GetNumOutEdges函数达到限制时返回n_limit值，并设置more_to_go为true。"}
{"id": "TEST1-248", "output_field": "BFS算法每次迭代标记当前层顶点为已访问，并将未访问邻接顶点加入下一层，活跃顶点数随之更新为当前层未处理顶点数，直至所有顶点被访问。"}
{"id": "TEST1-249", "output_field": "64字节"}
{"id": "TEST1-250", "output_field": "PUT 和 POST 方法"}
